# Updating the filebeat.yml file in server1
/etc/filebeat/filebeat.yml:
******************************************************************************
filebeat.inputs:
- type: log
  enabled: true
  paths:
    - /var/log/sherine.log
    - /var/log/audit/audit.log
  fields:
    server_name: server1
output.logstash:
  hosts: ["localhost:5044"]
******************************************************************************

# Updating the logstash.conf file in server1
/etc/logstash/conf.d/logstash.conf 
****************************************************************************** 
input {
  beats {
    port => 5044
  }
}

filter {
  if [fields][server_name] == "server1" {
    mutate {
      add_field => { "[@metadata][index]" => "index_server1" }
    }
  } else if [fields][server_name] == "server2" {
    mutate {
      add_field => { "[@metadata][index]" => "index_server2" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "%{[@metadata][index]}"
  }
}
******************************************************************************

# Restart the services
systemctl restart filebeat
systemctl restart logstash

# Check where the indices are available in elasticsearch
The below command is used to display the list of indices in elasticsearch
curl -XGET 'http://localhost:9200/_cat/indices'
                Expected Output:
                                green  open .geoip_databases             FyLNDP1XRXmasyKwLl4xvw 1 0  41    0  38.5mb  38.5mb
                                green  open .apm-custom-link             qF9NLz86QkGtkXQDw9S2IA 1 0   0    0    227b    227b
                                yellow open index_server1                41PKldyqSSCpWipBUQ9Grw 1 1 681    0 202.6kb 202.6kb
                                yellow open index_server2                41PKldyqSSCpWipBUQ9Grw 1 1 681    0 202.6kb 202.6kb
                                green open your_index_name               41PKldyqSSCpWipBUQ9Grw 1 1 681    0 202.6kb 202.6kb
                                green  open .apm-agent-configuration     IXhPd305TAas7Lj5ixunPA 1 0   0    0    227b    227b
                                green  open .kibana_7.17.15_001          TWRuanLrQoOSWiiOc0aggA 1 0  15    0   2.3mb   2.3mb
                                green  open .kibana_task_manager_7.17.15_001 a4OiksYeQyq29b-dgC-4hg 1 0  17 1278   278kb   278kb

                Both the new indices (index_server1 and index_server2) will be in yellow , so we need to update it to green.
                Yellow ---> Yellow status in Elasticsearch indicates that one or more of the replica shards on the Elasticsearch cluster are not allocated to a node.
                Green ---> Green status in Elasticsearch means that all shards are allocated. This is the ideal status for a healthy cluster.

# To convert the status from Yellow to green
curl -XPUT 'localhost:9200/index_server1/_settings' -H 'Content-Type: application/json' -d'
{
  "index" : {
    "number_of_replicas" : 0
  }
}'

curl -XPUT 'localhost:9200/index_server2/_settings' -H 'Content-Type: application/json' -d'
{
  "index" : {
    "number_of_replicas" : 0
  }
}'

# Check whether the status are updated correctly
curl -XGET 'http://localhost:9200/_cat/indices'

# Check the status of elasticsearch cluster
The below command is used to retrieve the health status of elasticsearch cluster.
curl -XGET -H "Content: application/json" "127.0.0.1:9200/_cluster/health?pretty"

Note:
The logs collected by index_server1 and your_index_name is same, even if we have updated the logstash config file from your_index_name to index_server1, the elasticsearch will have the your_index_name index available. If you no more want it , then delete the same using
# Delete index pattern from elasticsearch cluster
curl -X DELETE "localhost:9200/your_index_name"
  
