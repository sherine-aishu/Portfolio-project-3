# Configure logstash to receive logs from filbeat
cd /etc/logstash/conf.d/
ls
vi logstash.conf
**************************************************************************
input {
  beats {
    port => 5044
  }
}
output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "your_index_name"
  }
}
**************************************************************************

# Restart the logstash service
systemctl status logstash
systemctl restart logstash
systemctl status logstash

# Check whether the new index is available in elasticsearch
The below command is used to display the list of indices in elasticsearch
curl -XGET 'http://localhost:9200/_cat/indices'
            Expected output:
                              green  open .geoip_databases                 FyLNDP1XRXmasyKwLl4xvw 1 0  41    0  38.5mb  38.5mb
                              green  open .apm-custom-link                 qF9NLz86QkGtkXQDw9S2IA 1 0   0    0  227b    227b
                              yellow open your_index_name                  41PKldyqSSCpWipBUQ9Grw 1 1 681    0  202.6kb 202.6kb
                              green  open .apm-agent-configuration         IXhPd305TAas7Lj5ixunPA 1 0   0    0  227b    227b
                              green  open .kibana_7.17.15_001              TWRuanLrQoOSWiiOc0aggA 1 0  15    0  2.3mb   2.3mb
                              green  open .kibana_task_manager_7.17.15_001 a4OiksYeQyq29b-dgC-4hg 1 0  17  1278 278kb   278kb

            Yellow ---> Yellow status in Elasticsearch indicates that one or more of the replica shards on the Elasticsearch cluster are not allocated to a node.
            Green ---> Green status in Elasticsearch means that all shards are allocated. This is the ideal status for a healthy cluster.

# Convert the status from Yellow to Green
curl -XPUT 'localhost:9200/your_index_name/_settings' -H 'Content-Type: application/json' -d'
{
  "index" : {
    "number_of_replicas" : 0
  }
}'

# Again check whether the new index status is updated
curl -XGET 'http://localhost:9200/_cat/indices'

# Health status of elastic search
The below command is used to retrieve the health status of elasticsearch cluster.
curl -XGET -H "Content: application/json" "127.0.0.1:9200/_cluster/health?pretty"

# Allow port 5601 in system to access kibana
yum install firewalld
systemctl status firewalld
systemctl start firewalld.service
systemctl enable firewalld.service
sudo firewall-cmd --permanent --add-port=5601/tcp
sudo firewall-cmd --reload

# Allowing the ports at server level to access kibana 
Inbound open port 5601 from Any IPv4 

# Check whether kibana is loading fine locally
curl -LI http://localhost:5601 (or) curl -LI http://127.0.0.1:5601
curl -L http://localhost:5601 (or) curl -L http://127.0.0.1:5601

# Configure kibana to be accessed from anywhere
curl -L http://pubip:5601 (connection refused)
cd /etc/kibana/
cp kibana.yml kibana.yml_bck
vi kibana.yml
**************************************************************************
  server.host: "0.0.0.0"
**************************************************************************
This ensures kibana can be accessed from any IP.

# Restart the kibana service
sudo systemctl restart kibana 
sudo systemctl status kibana

# Accessing kibana
publicIP:5601 (in browser)

# If you are facing any issues then check the logs using below command
sudo journalctl -u kibana.service
------------------------------------------------------
